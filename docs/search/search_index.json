{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"None","text":"<p>This is a pure content</p>"},{"location":"introduction/","title":"Introduction","text":"<p>We are thrilled to present OuterSpace Operator, designed to revolutionize the way you deploy algorithms in the cloud. Our customizable Kubernetes Operator is designed to handle a diverse range of algorithms - from statistical and mechanistic to inference ones. This operator is your answer to seamless, efficient algorithm deployment, freeing up your team to focus on innovation and core business tasks.</p> <p>In today's fast-paced, data-driven world, effectively managing algorithm workloads is a necessity. Unpredictable workload spikes can become a costly concern, and that's where our Kubernetes Operator truly shines. It is built with a special focus on addressing unpredictable load spikes while minimizing infrastructure costs.</p> <p>Our operator doesn't just respond to workload spikes; it actively works to normalize the load. Through its intelligent design, it ensures that your infrastructure resources are utilized optimally, avoiding unnecessary costs while maintaining peak performance.</p> <p>Join us on this journey to redefine cloud-based algorithm deployment, and explore how OuterSpace Operator can transform your operations. The future of algorithm management in the cloud is here.</p>"},{"location":"introduction/#what-is-a-kubernetes-operator","title":"What is a Kubernetes Operator ?","text":"<p>Consider a Kubernetes Operator as your autopilot for managing Kubernetes applications. It deftly maneuvers through the intricate landscape of application management, leaving you free to concentrate on your ultimate objectives.</p> <p>In essence, a Kubernetes Operator is a method of packaging, deploying, and supervising a Kubernetes application. It's a design pattern that broadens the scope of the Kubernetes API to facilitate the creation, configuration, and management of complex stateful applications for Kubernetes users. It builds upon foundational Kubernetes resource and controller concepts, incorporating domain or application-specific knowledge to automate routine tasks.</p> <p>Kubernetes Operators alleviate the burden of intricate software deployments on Kubernetes, addressing tasks that would typically demand manual intervention. By managing the application's lifecycle and maintaining its desired state, Operators provide an optimal solution for stateful applications that rely on persistent data and robust scalability.</p>"},{"location":"introduction/#why-use-an-operator-for-algorithms","title":"Why use an operator for algorithms ?","text":"<p>The reasons are clear: reducing complexity and enhancing efficiency. Managing algorithms, particularly ones that need to run in the cloud, can be complex. These algorithms may have dependencies, require specific configurations, and need to scale based on the load. Manually managing this can be a resource-intensive task.</p> <p>This is where OuterSpace Operator comes to the forefront, revolutionizing how you manage your algorithms. It has been designed to understand your algorithms, their dependencies, configurations, and the resources they need. It can monitor your algorithms, adjust resources as necessary, handle failures, and recover from them. It does all of this automatically, reducing the manual effort and the risk of human error, and increasing the efficiency of your operations.</p> <p>Moreover, in a multi-cloud context, our operator becomes a key player. It allows you to manage your algorithm deployments on multiple cloud providers, reducing vendor lock-in and providing more operational flexibility. It gives you a consistent way to deploy and manage your algorithms, regardless of the underlying cloud infrastructure.</p> <p>Ready to revolutionize your cloud-based algorithm deployment and management?</p> <p>Reach out to us for a free demo, or start your journey with OuterSpace Operator today. Our team at Alien6 is excited to support you in harnessing the power of efficient, automated algorithm management. Get in touch with us to learn more about how OuterSpace Operator can transform your operations.</p>"},{"location":"introduction/#real-world-applications-and-benefits","title":"Real-World Applications and Benefits","text":"<p>OuterSpace Operator is not just a tool but a game-changer for industries where algorithm management is critical. For instance, in the financial sector, managing complex algorithms for data analysis and prediction can be demanding. With OuterSpace Operator, financial institutions can automate the deployment and scaling of these algorithms, allowing them to react swiftly to market changes and make data-driven decisions faster.</p> <p>In the field of healthcare, where patient data analysis and predictive modeling are paramount, OuterSpace Operator can ensure the efficient use of resources, safeguard against system overloads, and maintain optimal performance of algorithms, leading to improved patient outcomes. Regardless of your industry, OuterSpace Operator helps you maintain high efficiency, streamline operations, and stay ahead of the competition.</p>"},{"location":"about/commercial-support/","title":"Commercial Support and Licensing","text":"<p>OuterSpace Operator is exclusively licensed and sold by Alien6, a renowned IT consulting and publishing company based in Paris / Enghien-les-Bains, France. With Alien6's extensive expertise and commitment to customer success, you can be assured of receiving top-tier support and guidance throughout your journey with our Kubernetes Operator.</p> <p>Our dedicated team of professionals at Alien6 provides a comprehensive range of services, from addressing technical queries to assisting with operational challenges. We pride ourselves on our responsive and personalized approach to customer service. By choosing our Kubernetes Operator, you're not just purchasing a product; you're entering into a partnership with a team that prioritizes your needs and works relentlessly to ensure your success.</p> <p>We understand that every organization has unique requirements, and we are committed to helping you leverage our Kubernetes Operator to its fullest potential, tailoring solutions to meet your specific needs. Furthermore, Alien6 ensures that our licensing terms are transparent and customer-friendly, striving to build trust and foster long-term relationships.</p> <p>With Alien6, you get more than a license to use OuterSpace Operator; you get a dedicated partner that will stand by you every step of the way, ensuring you derive the maximum benefit from your investment.</p>"},{"location":"about/faq/","title":"Frequently Asked Questions","text":""},{"location":"about/faq/#what-is-the-outerspace-operator","title":"What is the OuterSpace Operator?","text":"<p>The OuterSpace Operator is a Kubernetes operator designed to simplify your algorithm deployment process. It manages deployments on various cloud platforms such as AWS, Google Cloud, Azure, and more, providing features like automated scaling, load normalization, wide algorithm support, and advanced security measures.</p>"},{"location":"about/faq/#how-does-outerspace-operator-integrate-with-other-systems","title":"How does OuterSpace Operator integrate with other systems?","text":"<p>OuterSpace Operator integrates seamlessly with a range of systems, including KServe for serverless inferencing, Prometheus for monitoring and alerting, and Azure Active Directory for authentication. It can be installed using Helm, allowing for deployment and management via any CI/CD platform.</p>"},{"location":"about/faq/#what-is-ground-control","title":"What is Ground Control?","text":"<p>Ground Control is a companion portal to the OuterSpace Operator. It provides a central place to visualize deployed algorithms, monitor metrics, review logs, view OpenAPI (Swagger) interface contracts, and manage Role-Based Access Control (RBAC) to algorithms.</p>"},{"location":"about/faq/#how-does-outerspace-operator-handle-security","title":"How does OuterSpace Operator handle security?","text":"<p>OuterSpace Operator prioritizes security and adheres to industry best practices. All pod communications are conducted via HTTPS, ensuring encryption in transit. Depending on the cluster configuration, it also provides encryption at rest. In addition, it integrates with Azure Active Directory for authentication and includes measures for access control to ensure data privacy.</p>"},{"location":"about/faq/#how-can-i-customize-outerspace-operator-to-suit-my-needs","title":"How can I customize OuterSpace Operator to suit my needs?","text":"<p>OuterSpace Operator is fully customizable, allowing users to tailor deployments according to their specific needs. For more details on customization, refer to the respective sections of the documentation.</p>"},{"location":"about/faq/#can-i-use-outerspace-operator-across-different-cloud-providers","title":"Can I use OuterSpace Operator across different cloud providers?","text":"<p>Yes, OuterSpace Operator is designed with multi-cloud support in mind. It manages deployments on managed or non-managed Kubernetes clusters independently of the selected cloud provider, providing you the flexibility and avoiding vendor lock-in.</p>"},{"location":"about/faq/#how-does-the-automated-scaling-work","title":"How does the automated scaling work?","text":"<p>The automated scaling feature of OuterSpace Operator ensures optimal resource utilization at all times. It dynamically scales your deployments up or down based on demand, ensuring cost efficiency and reliable performance during peak loads.</p>"},{"location":"features/features/","title":"Key Features","text":"<p>Our Kubernetes Operator has been packed with many features designed to simplify your algorithm deployment process. It offers unparalleled multi-cloud support, providing you with the flexibility to deploy on various cloud platforms such as AWS, Google Cloud, Azure, and more. The automated scaling functionality not only ensures optimal resource utilization but also provides cost savings and reliability during peak loads. Our unique load normalization feature not only prevents bottlenecks but also ensures consistent, high-quality performance across operations..</p> <p>The OuterSpace Operator supports a wide variety of algorithms, whether they are statistical, mechanistic, or inference-based, making it a highly versatile tool. It is fully customizable, allowing you to tailor your deployment to your specific needs. Robust error handling capabilities ensure that your operations recover gracefully in the event of a failure, and the detailed monitoring and logging functionalities provide invaluable insights into your deployments' performance.</p> <p>Prioritizing security, we've ensured that OuterSpace Operator adheres to best practices including data encryption and access controls, maintaining the privacy of your data. The operator is also designed with cost optimization in mind, providing effective resource management to handle unpredictable spikes in demand. Plus, it integrates smoothly with your existing CI/CD pipelines for seamless updates and deployments. With our Kubernetes Operator, you are empowered to manage your cloud-based algorithm deployments more efficiently and effectively than ever before.</p> <code>Take Off with Multi-Cloud Deployment</code> The operator manages deployments on managed (EKS, AKS, GKE, and more) and non-managed Kubernetes clusters (IaaS) independently of the selected cloud provider, such as AWS, Google Cloud, Azure, etc. This provides maximum flexibility and avoids vendor lock-in, giving you freedom of choice and negotiating power with cloud service providers. <code>Cruise in Auto-Pilot with Automated Scaling</code> Regardless of whether you're dealing with a major traffic surge or a quiet period, automated scaling ensures optimal utilization of resources at all times. <code>Orbit Around Efficiency with Load Normalization</code> The operator helps to balance workloads and prevent bottlenecks by queuing and distributing tasks evenly across all available resources. By preventing bottlenecks, the operator ensures smooth and fast processing for all tasks, enhancing overall system performance. <code>Navigate Seamlessly with KServe Integration</code> The OuterSpace Operator works seamlessly with KServe, a tool designed for serverless inferencing on Kubernetes. This integration allows you to effortlessly manage the entire lifecycle of your machine learning models, from development to deployment and scaling. With OuterSpace Operator and KServe working together, you gain the advantage of powerful model serving capabilities coupled with automated, efficient algorithm deployment and management. This ensures you're well-equipped to rapidly deploy, update, and scale your machine learning solutions, meeting the dynamic demands of your operations. This versatility means you can use OuterSpace Operator across a variety of projects and teams, making it a comprehensive solution for your organization. <code>Customize Your Flight Plan for Precise Mission Execution</code> Users can easily configure and customize deployments according to their specific needs, IT and Security Policies, and compliance requirements. This flexibility ensures you can tailor your deployments to your unique use case, ensuring optimal performance and efficiency. <code>Stellar Recoveries with Robust Error Handling</code> In the event of a failure, the operator provides robust error handling capabilities and recover gracefully. This ensures your operations experience minimal downtime, maintaining high efficiency and productivity. <code>Keep an Eye on Your Flight Path with Prometheus Monitoring</code> The OuterSpace Operator is integrated with Prometheus, a leading open-source system monitoring and alerting toolkit. This integration allows for robust monitoring capabilities, offering insights into the performance and health of your deployments. Additionally, the OuterSpace Operator provides predefined KPIs and metrics custom-tailored to your algorithm deployments, allowing you to keep a close eye on performance, resource utilization, and other crucial aspects. This data-driven approach ensures you're always informed about your system's status and can make timely decisions to optimize your operations. With OuterSpace Operator and Prometheus, you can not just monitor, but truly understand your deployments. <code>Safety Assured with Advanced Security Measures</code> <p>The OuterSpace Operator puts security at the forefront, strictly adhering to industry best practices. To safeguard your valuable data, all communications between pods are conducted via HTTPS only, ensuring encryption in transit and protection against interception. Furthermore, depending on the cluster configuration, we provide encryption at rest, which secures your data when stored. These measures together with access controls not only ensure data privacy but also help you meet stringent compliance requirements.</p> <p>The operator also comes with built-in support for OAuth2, thereby ensuring the security of your algorithms. It seamlessly integrates with Keycloak and Azure Active Directory (AAD), offering reliable and secure methods for user authentication, thereby enhancing the security of your deployments.</p> <p>With OuterSpace Operator, you can operate confidently knowing your data is protected at every stage.</p> <code>Travel Light with Cost Optimization</code> The operator has been designed to minimize infrastructure costs, including effective resource management to handle unpredictable spikes in demand. This ensures you get maximum value from your infrastructure investment, saving costs without sacrificing performance. <code>Launch and Land with Ease using CI/CD Integration</code> The OuterSpace Operator is Helm-compatible, meaning it can be effortlessly installed and managed with Helm, a package manager for Kubernetes. This compatibility paves the way for smooth and efficient integration with various Continuous Integration and Continuous Deployment (CI/CD) pipelines, enabling streamlined updates and deployments. Whether your team prefers Jenkins, GitLab, or another platform, you can confidently manage the operator via your chosen tools. This integration ensures your teams can work efficiently, deploying updates quickly, and maintaining a high development velocity."},{"location":"features/ground-control/","title":"Ground Control","text":"<p>In concert with the OuterSpace Operator, Ground Control allows you to easily manage and monitor your deployments, whether they are large or small, simple or complex. From individual algorithm deployments to orchestrating entire fleets of algorithm pods, Ground Control and OuterSpace Operator make the process easier and more efficient.</p> <code>Dashboard &amp; Metrics</code> <p>Upon logging into Ground Control, you're greeted with a comprehensive dashboard. This interface provides a real-time overview of the algorithms deployed on the cluster. It includes a variety of dedicated metrics for each algorithm, giving you insights into their performance, resource utilization, and other crucial factors.</p> <p>Each algorithm's metrics are presented in an intuitive, user-friendly format, making it easy to understand the current state of your deployments at a glance.</p> <code>Log Management</code> <p>Efficient log management is critical for monitoring your deployments and troubleshooting potential issues. Ground Control provides a dedicated section for viewing, managing and downloading the logs of each deployed algorithm.</p> <p>Logs can be filtered based on time, algorithm, pods, severity, or any custom parameters you define, making it simple to drill down to the information you need. You can request logs using Prometheus queries, and Ground Control will display the results in a user-friendly format.</p> <code>OpenAPI Interface Contracts</code> <p>For each algorithm deployed on your cluster, Ground Control provides an easy way to view its OpenAPI (Swagger) interface contracts. OpenAPI contracts are an essential part of modern API development, offering a clear, standard format for describing your API.</p> <p>This feature allows you to check the details of each algorithm's API, such as endpoints, request/response types, status codes, and more, enhancing your understanding and management of your deployed algorithms. It helps Data Scientists and Data Engineers to experiment with the algorithms and test them before deploying them in production.</p> <code>Role-Based Access Control (RBAC)</code> <p>Security and access control are crucial in any system. Ground Control includes a feature to manage RBAC for each algorithm, providing you with granular control over who can access what.</p> <p>From Ground Control, you can create teams, assign roles and permissions to different users, ensuring they only have access to the algorithms and features they need. This helps to maintain security, minimize the risk of accidental disruption, and comply with any internal or regulatory requirements.</p>"},{"location":"insiders/","title":"Insiders","text":"<p>To take our commitment to customer success one step further, we are excited to introduce the OuterSpace Operator Insiders Program. This initiative is designed to provide users with immediate access to our latest features and innovations, even before they become widely available.</p> <p>As an Insider, you will play a pivotal role in our development process. You will have the unique opportunity to provide feedback and influence the evolution of OuterSpace Operator. This ensures that we continuously align our advancements with your specific needs and those of the broader Kubernetes community. This program empowers you to be more than just a user; you become a valued partner in our journey of revolutionizing algorithm deployments.</p> <p>With the Insiders Program, we aim to strengthen our collaboration with our customers and extend the dialogue beyond just problem-solving. Together, we can accelerate algorithm deployments, push the boundaries of Kubernetes technology, and define the future of this space.</p> <p>In addition to our top-tier support and transparent licensing, the Insiders Program further exemplifies Alien6's dedication to building and fostering strong, mutually beneficial relationships with our customers. It signifies our unwavering commitment to ensuring your success and satisfaction.</p> <p>Join the OuterSpace Operator Insiders Program today, and take an active role in shaping the future of Kubernetes technology!</p>"},{"location":"setup/configuration-guide/","title":"Configuration Guide","text":""},{"location":"setup/configuration-guide/#ground-control-configuration","title":"Ground Control Configuration","text":"<p>Ground Control, the dedicated portal for managing and visualizing your algorithm deployments, can be enabled or disabled according to your needs.</p> <p>To enable or disable Ground Control, update the values.yaml file as follows:</p> <pre><code>groundControl:\nenabled: true\n</code></pre> <p>In this configuration, setting <code>groundControl.enabled</code> to <code>true</code> will activate Ground Control. If you prefer not to use Ground Control, simply set this value to <code>false</code>.</p>"},{"location":"setup/configuration-guide/#database-configuration","title":"Database Configuration","text":"<p>OuterSpace Operator relies exclusively on PostreSQL. However, you can either utilize a PostgreSQL database that can be managed (like Google Cloud SQL) or directly deployed within your Kubernetes cluster using the Bitnami's PostgreSQL Helm chart. For the latter, you need to enable it in the <code>values.yaml</code> file:</p> <pre><code>postgresql:\nenabled: true\n</code></pre> <p>In this configuration, setting <code>postgresql.enabled</code> to <code>true</code> will install PostgreSQL directly in your Kubernetes cluster using Bitnami's PostgreSQL Helm chart.</p>"},{"location":"setup/configuration-guide/#monitoring-configuration","title":"Monitoring Configuration","text":"<p>When deploying on GKE, OuterSpace Operator can leverage Managed Prometheus for monitoring or pull in Prometheus using its Helm chart. Update the <code>values.yaml</code> file with the relevant settings.</p> <pre><code>prometheus:\nmanaged: false\n</code></pre> <p>In this configuration, setting <code>prometheus.managed</code> to <code>false</code> means that Managed Prometheus will not be used. Instead, Prometheus will be pulled in via its Helm chart.</p>"},{"location":"setup/configuration-guide/#ingress-configuration","title":"Ingress Configuration","text":"<p>The OuterSpace Operator provides flexibility when it comes to managing ingress for your algorithms. It can integrate with multiple ingress classes including NGINX, Kong, or GCE. You can specify your choice in the <code>values.yaml</code> file:</p> <pre><code>ingress:\nclass: \"nginx\"\n</code></pre> <p>In this configuration, replace <code>nginx</code> with your preferred ingress class (<code>nginx</code>, <code>kong</code>, or <code>gce</code>).</p> <p>Warning</p> <p>Ensure that the selected ingress controller is properly installed and configured in your Kubernetes cluster.</p>"},{"location":"setup/installation-guide/","title":"Installation Guide","text":"<p>The OuterSpace Operator provides flexibility and options when it comes to its setup, allowing you to choose between various integrations. This guide provides an overview of how to install the OuterSpace Operator, along with some customizable options like the choice of database, queuing system, security options and monitoring.</p>"},{"location":"setup/installation-guide/#prerequisites","title":"Prerequisites","text":"<p>Before you proceed with the installation, make sure you have the following:</p> <ol> <li>A Kubernetes cluster, such as Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), or Amazon Elastic Kubernetes Service (EKS).</li> <li>Helm installed on your workstation,</li> <li>An access to the OuterSpace Operator Helm Chart Repository.</li> </ol>"},{"location":"setup/installation-guide/#installation-steps","title":"Installation Steps","text":"<p>Here are the general steps to install the OuterSpace Operator using Helm:</p> <ol> <li> <p>Preparation: Make sure you have Helm installed on your workstation. You'll also need to have the OuterSpace Operator Helm chart ready. From our OuterSpace Operator Helm Chart Repository, download or clone the OuterSpace Operator Helm chart to your local system.</p> </li> <li> <p>Configuration: Edit the <code>values.yaml</code> file according to your needs. This includes configuration for the database, auth2, and monitoring.</p> </li> <li> <p>Deploy the Helm Chart: Once the <code>values.yaml</code> file is configured as per your needs, deploy the Helm chart:</p> <pre><code>helm install [RELEASE_NAME] [CHART] --values [VALUES_FILE]\n</code></pre> <p>Warning</p> <p>Replace [RELEASE_NAME] with the name you want to assign to your deployment, [CHART] with the path to your OuterSpace Operator Helm chart, and [VALUES_FILE] with the path to your updated values.yaml file.</p> </li> <li> <p>Verify the Installation: After the Helm chart is deployed, verify that all components are running as expected:</p> <pre><code>kubectl get pods\n</code></pre> </li> </ol>"},{"location":"setup/security-guide/","title":"Security Guide","text":"<p>The OuterSpace Operator assures end-to-end security via OAuth2 protocol. Specifically, it is designed to work seamlessly with Keycloak and Azure Active Directory (AAD). In the absence of an external authentication system configuration, the operator automatically resorts to Keycloak for authentication and identity management.</p>"},{"location":"setup/security-guide/#authentication","title":"Authentication","text":"<p>End-to-end OAuth2 authentication is crucial for securing your deployments. By leveraging OAuth2, the OuterSpace Operator guarantees that only authenticated and authorized entities can access your algorithms. This mechanism of user authentication and authorization ensures data integrity, confidentiality, and availability across your deployments.</p> <p>OAuth2 provides a standardized, widely adopted framework that handles secure access to resources. It can efficiently manage and limit third-party access without exposing user credentials. By integrating with Keycloak and Azure Active Directory (AAD), OuterSpace Operator brings the power and flexibility of industry-leading authentication platforms to protect your deployed algorithms.</p>"},{"location":"setup/security-guide/#authentication-with-keycloak","title":"Authentication with Keycloak","text":"<p>By default, if no external authentication system is specified, the OuterSpace Operator will automatically pull, install, and configure Keycloak. Keycloak is an open-source Identity and Access Management (IAM) solution that provides added security with minimum configuration. It serves as the default identity and access manager for your deployments.</p> <p>If you want to rely on Keycloak, ensure that the AAD configuration is set to disabled in the values.yaml file:</p> <pre><code>authentication:\nkeycloak: enabled: true\nclientID: [CLIENT-ID]\nclientSecret: [CLIENT-SECRET]\n</code></pre> <p>By setting <code>keycloak: enabled: true</code>, Keycloak is automatically set as the authentication manager.</p>"},{"location":"setup/security-guide/#optional-azure-active-directory-aad-integration","title":"Optional: Azure Active Directory (AAD) Integration","text":"<p>If you prefer to use AAD as your authentication system, you can integrate it by adjusting the following settings in your <code>values.yaml</code> file:</p> <pre><code>authentication:\naad:\nenabled: true\ntenantID: [TENANT-ID]\nclientID: [CLIENT-ID]\nclientSecret: [CLIENT-SECRET]\n</code></pre> <p>By setting <code>aad: enabled: true</code>, the Operator will use AAD for authentication instead of Keycloak.</p>"},{"location":"setup/security-guide/#encryption-at-transit","title":"Encryption at transit","text":""},{"location":"setup/security-guide/#certificate-management-integration","title":"Certificate Management Integration","text":"<p>OuterSpace Operator is also designed to work seamlessly with Cert Manager, an open-source Kubernetes tool that automates the management and issuance of TLS certificates.</p> <p>TLS (Transport Layer Security) certificates are crucial for ensuring secure communication over the internet. When used with ingress controllers in a Kubernetes environment, these certificates allow for secure HTTPs access to your deployed algorithms.</p> <p>Cert Manager aids in automating the process of issuing, renewing, and managing these certificates, removing the hassle of manual certificate management. This not only saves valuable time but also reduces the risk of downtime or security breaches due to expired or misconfigured certificates.</p> <p>To enable the integration with Cert Manager, you need to configure your values.yaml file as follows:</p> <pre><code>certManager:\nenabled: true\n</code></pre> <p>By integrating Cert Manager into your setup, OuterSpace Operator ensures that your ingress communication is secure and well managed, adding yet another layer of security and reliability to your deployments.</p>"},{"location":"setup/security-guide/#using-a-certified-ca-with-cert-manager","title":"Using a Certified CA with Cert Manager","text":"<p>In addition to automating the management and issuance of TLS certificates, Cert Manager can also be configured to work with a certified Certificate Authority (CA). This feature allows organizations that have their own internal CA, or who prefer to use a specific CA, to integrate it into their OuterSpace Operator environment.</p> <pre><code>certManager:\nenabled: true\nuseCertifiedCA: true\ncaSecretName: [CA-SECRET-NAME]\n</code></pre> <p>In this configuration, <code>useCertifiedCA</code> is set to <code>true</code> to indicate that a certified CA is being used. The <code>caSecretName</code> should be replaced with the name of the secret in your Kubernetes cluster where your CA certificate and key are stored.</p> <p>Using a certified CA further enhances the security of your communications and can help to meet certain organizational policies or regulatory requirements.</p>"}]}